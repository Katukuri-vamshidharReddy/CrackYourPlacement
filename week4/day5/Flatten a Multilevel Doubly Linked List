/*
// Definition for a Node.
class Node {
    public int val;
    public Node prev;
    public Node next;
    public Node child;
};
*/

class Solution {
    public Node flatten(Node head) {
        if (head == null) return null;
        
        Node pseudoHead = new Node(0);
        Node prev = pseudoHead;
        flattenList(head, prev);
        
        pseudoHead.next.prev = null; 
        return pseudoHead.next;
    }
    
    private Node flattenList(Node head, Node prev) {
        Node current = head;
        
        while (current != null) {
            prev.next = current;
            current.prev = prev;
            prev = current;
            
            Node next = current.next;
            if (current.child != null) {
                Node childTail = flattenList(current.child, prev);
                current.child = null; 
                prev = childTail;
            }
            current = next;
        }
        return prev;
    }
}
