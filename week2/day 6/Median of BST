import java.util.ArrayList;
import java.util.List;

class TreeNode {
    int val;
    TreeNode left;
    TreeNode right;

    TreeNode(int x) {
        val = x;
        left = null;
        right = null;
    }
}

class Solution {
    private void inOrderTraversal(TreeNode root, List<Integer> values) {
        if (root == null) return;
        inOrderTraversal(root.left, values);
        values.add(root.val);
        inOrderTraversal(root.right, values);
    }

    public double findMedian(TreeNode root) {
        List<Integer> values = new ArrayList<>();
        inOrderTraversal(root, values);

        int n = values.size();
        if (n % 2 == 1) {
            return values.get(n / 2);
        } else {
            int mid1 = n / 2 - 1;
            int mid2 = n / 2;
            return (values.get(mid1) + values.get(mid2)) / 2.0;
        }
    }
}

public class GfG {
    public static void main(String[] args) {
        TreeNode root = new TreeNode(6);
        root.left = new TreeNode(3);
        root.right = new TreeNode(8);
        root.left.left = new TreeNode(1);
        root.left.right = new TreeNode(4);
        root.right.left = new TreeNode(7);
        root.right.right = new TreeNode(9);

        Solution solution = new Solution();
        double median = solution.findMedian(root);
        System.out.println("Median of the BST is: " + median);
    }
}
